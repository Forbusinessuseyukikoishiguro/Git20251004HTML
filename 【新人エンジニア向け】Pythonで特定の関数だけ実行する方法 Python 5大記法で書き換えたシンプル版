"""
【新人エンジニア向け】Pythonで特定の関数だけ実行する方法
Python 5大記法で書き換えたシンプル版

使い方：
VSCodeで実行ボタンを押すか、ターミナルで `python ファイル名.py` を実行
"""


# ============================================================
# 方法1: 順次処理（上から順番に実行）
# ============================================================
def method1_example():
    print("\n方法1: 順次処理（上から順番に実行）")
    print("-" * 40)
    
    # 1行目
    print("ステップ1: データを準備")
    price = 1000
    
    # 2行目
    print("ステップ2: 消費税を計算")
    tax = price * 0.1
    
    # 3行目
    print("ステップ3: 結果を表示")
    print(f"消費税: {tax}円")


# ============================================================
# 方法2: 選択処理（条件分岐 if文）
# ============================================================
def method2_example():
    print("\n方法2: 選択処理（if文で分岐）")
    print("-" * 40)
    
    # フラグ（条件）
    send_email = False  # メール送信する？
    
    price = 1000
    tax = price * 0.1
    
    # 条件で処理を選択
    if send_email:
        print("📧 メールを送信します")
    else:
        print("⏭️ メール送信をスキップ")


# ============================================================
# 方法3: 反復処理（繰り返し for/while）
# ============================================================
def method3_example():
    print("\n方法3: 反復処理（繰り返し）")
    print("-" * 40)
    
    # リストのデータ
    prices = [100, 200, 300]
    
    # for文で繰り返し処理
    for price in prices:
        tax = price * 0.1
        print(f"価格{price}円 → 消費税{tax}円")


# ============================================================
# 方法4: 関数（処理をまとめる）
# ============================================================
def method4_example():
    print("\n方法4: 関数（処理をまとめる）")
    print("-" * 40)
    
    # 関数を定義
    def calculate_tax(price):
        return price * 0.1
    
    # 関数を呼び出す
    result = calculate_tax(1000)
    print(f"消費税: {result}円")
    
    # 同じ関数を何度でも使える
    result2 = calculate_tax(2000)
    print(f"消費税: {result2}円")


# ============================================================
# 方法5: クラス（データと処理をまとめる）
# ============================================================
def method5_example():
    print("\n方法5: クラス（オブジェクト指向）")
    print("-" * 40)
    
    # クラスを定義
    class Shop:
        def __init__(self, name):
            self.name = name  # お店の名前
            self.sales = 0    # 売上
        
        def sell(self, price):
            tax = price * 0.1
            total = price + tax
            self.sales += total
            print(f"{self.name}: {price}円の商品を販売（税込{total}円）")
        
        def show_sales(self):
            print(f"{self.name}の本日の売上: {self.sales}円")
    
    # クラスからオブジェクトを作成
    shop = Shop("ふわふわ大福店")
    
    # オブジェクトのメソッドを呼び出す
    shop.sell(300)
    shop.sell(500)
    shop.show_sales()


# ============================================================
# 🐰 実践例: うさうさ店長の1日（5大記法を組み合わせる）
# ============================================================
def usausa_shop_example():
    print("\n🐰 実践例: うさうさ店長の1日")
    print("-" * 40)
    
    # クラス（方法5）
    class DaifukuShop:
        def __init__(self):
            self.stock = 0  # 在庫
            self.sales = 0  # 売上
        
        def make_daifuku(self):
            """順次処理（方法1）"""
            print("🥣 もち米をこねこね...")
            print("🫘 あんこをつめつめ...")
            self.stock = 20
            print(f"✨ 大福{self.stock}個完成！")
        
        def sell_daifuku(self, count):
            """選択処理（方法2）"""
            if self.stock >= count:
                self.stock -= count
                self.sales += count * 300
                print(f"💰 大福{count}個販売！ 売上{count * 300}円")
            else:
                print("⚠️ 在庫不足です")
        
        def show_status(self):
            print(f"📊 在庫: {self.stock}個、売上: {self.sales}円")
    
    # オブジェクトを作成
    shop = DaifukuShop()
    
    # 順次処理
    print("🌅 開店準備")
    shop.make_daifuku()
    
    # 反復処理（方法3）：3人のお客さん
    customers = [2, 3, 1]  # それぞれが買う個数
    print("\n👨 お客さんが来店")
    for i, count in enumerate(customers, 1):
        print(f"お客さん{i}人目:")
        shop.sell_daifuku(count)
    
    # 結果表示
    print("\n🌙 閉店")
    shop.show_status()


# ============================================================
# メイン処理
# ============================================================
if __name__ == "__main__":
    print("=" * 50)
    print("Python 5大記法")
    print("=" * 50)
    
    # 各方法を実行
    method1_example()  # 順次処理
    method2_example()  # 選択処理
    method3_example()  # 反復処理
    method4_example()  # 関数
    method5_example()  # クラス
    
    # 実践例
    usausa_shop_example()
    
    print("\n" + "=" * 50)
    print("✅ 完了！")
    print("=" * 50)
    print("""
💡 Python 5大記法まとめ:
1. 順次処理: 上から順番に実行
2. 選択処理: if文で条件分岐
3. 反復処理: for/whileで繰り返し
4. 関数: 処理をまとめて再利用
5. クラス: データと処理をまとめる
""")
